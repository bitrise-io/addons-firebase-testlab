@import "defaults";
@import "constants";

.page-details {
	$layout-collapse_width: 768px;
	$section-spacing: 18px;
	$header-horizontalpadding: 25px;
	$device_info-width: 35%;
	$device_info-rightspacing: 30px;
	$status_icon-rightspacing: 18px;

	.notification.load-test, .notification.load-test-cases {
		height: $menubutton_size;
		@include box-sizing(border-box);
	}

	header.test, section, .notification {
		margin-bottom: $section-spacing;
	}

	header.test {
		$horizontalpadding: $test_leftpadding;

		@include display-flex;
		@include align-items(center);
		height: $menubutton_size;
		border-left: $test_leftborder-width solid;
		@include border-radius($def-radius);
		padding-left: $horizontalpadding - $test_leftborder-width;
		padding-right: $horizontalpadding;
		font-size: 14px;
		color: $def-darkgrey;
		background-color: white;

		.status-icon {
			@include flex-shrink(0);
			margin-right: $status_icon-rightspacing;

			.svg-wrapper {
				display: none;
			}
		}

		.device-info {
			width: $device_info-width;
			margin-right: $device_info-rightspacing;
			@include ellipsis-oneliner;
			font-weight: 500;
		}

		@mixin style_for_state($state, $color, $svg_width: null, $svg_height: null) {
			&.#{ $state } {
				border-left-color: $color;

				.status-icon {

					&:before {
						background-color: $color;
					}

					.svg-wrapper.#{ $state } {
						display: inline;

						svg {
							@include size($state_icon-size);

							path.plate {
								fill: $color;
							}
						}
					}
				}
			}
		};

		@include style_for_state("passed", $def-green, 10px, 8px);
		@include style_for_state("failed", $def-orange, 8px, 8px);

		.duration, .orientation, .locale {
			@include flex-grow(1);
			@include display-flex;
			@include align-items(center);
			font-weight: 200;

			svg {
				margin-right: 12px;
				fill: $def-darkgrey;
			}
		}

		.orientation, .locale {
			text-transform: capitalize;
		}

		.duration svg {
			@include size(13px);
		}

		.orientation svg {
			@include size(20px, 18px);
		}

		.locale svg {
			@include size(11px, 13px);
		}

		@include media-below($layout-collapse_width) {
			display: block;
			height: auto;
			@include padding-y(12px);

			.device-info, .duration, .orientation, .locale {
				margin-top: 12px;

				svg {
					width: $state_icon-size;
					margin-right: $status_icon-rightspacing;
				}
			}

			.device-info {
				width: auto;
				margin-right: 0;
				white-space: normal;

				strong {
					@include flex-grow(1);
				}
			}
		}
	}

	section {
		@include border-radius($def-radius);
		overflow: hidden;

		header {
			@include padding-x($header-horizontalpadding);
		}
	}

	section#test-cases-test-issues thead tr, section header {
		@include padding-y(16px);
		font-size: 12px;
		text-transform: uppercase;
		background-color: white;
	}

	section#test-cases-test-issues {
		$horizontalpadding: $test_leftpadding;

		header {
			@include padding-x($horizontalpadding);
			font-weight: 600;
		}

		.test-case-test-issue {
			border-top: 1px solid $def-grey;
			border-left: $test_leftborder-width solid;

			.details-wrapper {
				position: relative;

				button.stack-trace-toggle {
					@include position(absolute, 0, null, null, 0);
					@include size(100%);
					border: none;
					padding: 0;
					background-color: transparent;

					svg {
						$arrow-width: 10px;
						$arrow-height: 6px;

						@include position(absolute, 50%, $horizontalpadding / 2);
						@include size($arrow-width, $arrow-height);
						margin-right: - $arrow-width / 2;
						margin-top: - $arrow-height / 2;
						@include transition(transform 0.2s);
						fill: $def-darkgrey;
					}

					&.on svg {
						@include transform(rotate(180deg));
					}

					&:not(:disabled) {
						cursor: pointer;

						&:hover ~ .details, &:focus ~ .details {
							background-color: $def-grey;
						}

						&:focus {
							@include no-default-focus-styling;
						}
					}
				}

				.details {
					@include display-flex;
					@include align-items(center);
					padding-left: $horizontalpadding - $test_leftborder-width;
					padding-right: $horizontalpadding;
					@include padding-y(16px);
					background-color: white;
					@include transition(background-color 0.2s);

					.status-icon {
						@include flex-shrink(0);
						margin-right: $status_icon-rightspacing;

						.svg-wrapper {
							display: none;
						}
					}

					.name {
						@include flex-shrink(0);
						margin-right: $device_info-rightspacing;
						@include ellipsis-oneliner;
						font-size: 16px;

						&:not(:last-child) {
							width: $device_info-width;
						}

						strong {
							font-weight: 400;
						}
					}

					.name, .package {
						font-size: 14px;
						font-weight: 200;

						.placeholder {
							display: none;
						}
					}

					.package {
						@include flex-grow(1);
						overflow: hidden;

						code {
							display: block;
							@include border-radius($def-radius);
							padding: 6px;
							@include ellipsis-oneliner;
							background-color: $def-lightgrey;
							font-size: 12px;
							font-weight: 200;
						}
					}
				}
			}

			@mixin style_for_state($state, $color, $svg_width: null, $svg_height: null) {
				&.#{ $state } {
					border-left-color: $color;

					.details-wrapper .details .status-icon {

						.svg-wrapper.#{ $state } {
							display: inline;

							svg {
								@include size($state_icon-size);

								path.plate {
									fill: $color;
								}
							}
						}
					}
				}
			};

			@include style_for_state("passed", $def-green, 10px, 8px);
			@include style_for_state("failed", $def-orange, 8px, 8px);

			code.stack-trace {
				display: block;
				@include padding-y(15px);
				padding-left: $horizontalpadding - $test_leftborder-width;
				padding-right: $horizontalpadding;
				white-space: pre-wrap;
				word-wrap: break-word;
				font-size: 12px;
				font-weight: 200;
				color: $def-verydarkgrey;
				background-color: $def-lightgrey;
			}
		}

		@include media-below($layout-collapse_width) {

			.test-case-test-issue .details-wrapper .details {
				@include flex-direction(column);
				@include align-items(flex-start);

				.status-icon {
					margin-right: 0;
				}

				.name {
					width: 100%;
					margin-right: 0;

					strong {
						white-space: normal;
						word-break: break-all;
					}
				}

				.name, .package {
					margin-top: 12px;

					.placeholder {
						display: block;
						margin-bottom: 6px;
					}
				}

				.package code {
					overflow: visible;
					white-space: normal;
					word-break: break-all;
				}
			}
		}
	}

	section#video {

		.content {
			background-color: black;

			video {
				display: block;
				max-width: 100%;
				max-height: 350px;
				@include margin-x(auto);
				@include transition(max-height 0.3s);

				&.expanded {
					max-height: 700px;
				}
			}

			.controller {
				position: relative;
				background-color: #252525;

				button.seek {
					display: block;
					@include position(absolute, null, null, 100%);
					@include size(100%, 3px);
					padding: 0;
					border: none;
					@include no-default-focus-styling;
					@include transition(height 0.2s);
					background-color: #252525;
					cursor: pointer;

					span.hovered {
						@include position(absolute, 0, null, null, 0);
						height: 100%;
						background-color: rgba(white, 0.3);
					}

					span.played {
						position: relative;
						display: block;
						height: 100%;
						background-color: #32eab5;
					}
				}

				.menu {
					position: relative;
					@include display-flex;

					button.play-pause-toggle, a.download, button.full-screen-toggle {
						$button-size: 50px;

						height: $button-size;
						line-height: $button-size;
						@include padding-x($header-horizontalpadding);
						@include no-default-focus-styling;
					}

					button.play-pause-toggle {
						margin-left: 0;
						margin-right: auto;
						border: none;
						background-color: transparent;
						cursor: pointer;

						&.playing .svg-wrapper.play, &:not(.playing) .svg-wrapper.pause {
							display: none;
						}

						.svg-wrapper svg {
							fill: white;
							@include transition(fill 0.2s);
						}

						.svg-wrapper.play svg {
							@include size(13px, 14px);
						}

						.svg-wrapper.pause svg {
							@include size(13px, 14px);
						}

						&:hover, &:focus {

							.svg-wrapper svg {
								fill: $def-green;
							}
						}
					}

					time.current-time {
						@include position(absolute, 50%, null, null, 50%);
						@include transform(translate(-50%, -50%));
						font-size: 12px;
						font-weight: 400;
						color: $def-darkgrey;
					}

					a.download, button.full-screen-toggle {

						svg {
							fill: $def-darkgrey;
							@include transition(fill 0.2s);
						}

						&:hover svg, &:focus svg {
							fill: $def-green;
						}
					}

					a.download {
						text-align: center;

						svg {
							@include size(9px, 14px);
						}
					}

					button.full-screen-toggle {
						@include margin-x(0);
						border: none;
						background-color: transparent;
						cursor: pointer;

						svg {
							@include size(15px);
						}
					}

					@include media-below-mid {

						button.play-pause-toggle, a.download, button.full-screen-toggle {
							$button-size: 36px;

							height: $button-size;
							line-height: $button-size;
							@include padding-x(12px);
						}
					}
				}
			}

			&:hover .controller button.seek {
				height: 8px;
			}
		}
	}

	section#metrics {
		$metrics_ruler-color: #ccc;

		.metric {

			header {
				@include display-flex;
				@include justify-content(space-between);

				ul.legend {
					@include display-flex;
					@include margin-y(0);
					padding-left: 0;
					font-size: 12px;
					font-weight: 200;
					text-transform: uppercase;
					color: $def-grey;

					li {
						@include display-flex;
						@include align-items(center);
						margin-right: 30px;

						&:before {
							content: "";
							@include size(25px, 3px);
							margin-right: 10px;
						}
					}
				}

				button.toggle {
					border: none;
					margin: -10px;
					padding: 10px;
					background-color: transparent;
					@include no-default-focus-styling;
					cursor: pointer;

					svg {
						@include size(11px, 7px);
						fill: $def-darkgrey;
						@include transition(transform 0.3s, fill 0.2s);
					}

					&:focus svg, &:hover svg {
						fill: $def-verydarkgrey;
					}

					&.open svg {
						@include transform(rotate(180deg));
					}
				}
			}

			figure {
				$open-duration: 0.3s;
				$scale-width: 30px;

				@include display-flex;
				margin: 0;
				padding: 48px $header-horizontalpadding;
				background-color: white;

				.vertical-scale {
					$scale-lineheight: 16px;

					@include flex-shrink(0);
					@include display-flex;
					@include flex-direction(column);
					@include justify-content(space-between);
					@include align-items(flex-end);
					width: $scale-width;
					margin-right: 4px;
					margin-top: - $scale-lineheight / 2;
					margin-bottom: $scale-width - $scale-lineheight / 2;
					font-size: 12px;
					color: $metrics_ruler-color;
					@include transition(opacity $open-duration);

					.value-grid-element {
						line-height: $scale-lineheight;
						@include transition(line-height $open-duration);
					}
				}

				.metric-with-horizontal-scale {
					@include flex-grow(1);

					.samples-with-grid {
						position: relative;
						width: 100%;
						height: 230px;
						@include transition(height $open-duration);

						svg.grid, svg.samples {
							@include position(absolute, null, 0, 0);
							width: 100%;
						}

						svg.grid {
							height: 100%;
							@include transition(opacity $open-duration);

							path.grid {
								stroke: $metrics_ruler-color;
								stroke-dasharray: 2, 4;
								vector-effect: non-scaling-stroke;
							}
						}

						svg.samples {

							path.sample-curve {
								vector-effect: non-scaling-stroke;
								stroke: black;
								stroke-width: 2px;
								stroke-linejoin: round;
							}

							@include keyframes(grow-up) {
								0% {
									height: 0;
								}
								100% {
									height: 100%;
								}
							}

							@include animation(grow-up 1s ease-in-out forwards);
						}

						button.seek {
							@include size(100%);
							@include position(absolute, 0, 0);
							border: none;
							padding: 0;
							background-color: transparent;
							@include no-default-focus-styling;

							.seek-cursor {
								@include position(absolute, null, null, 0);
								@include transform(translateX(-50%));
								height: 100%;

								&:before {
									$width: 1px;

									content: "";
									@include position(absolute, null, 50%);
									@include size(1px, 100%);
									margin-right: - $width / 2;
									background-color: black;
								}

								.pin {
									$size: 8px;

									z-index: $zindex-metric_seek_pin;
									@include position(absolute, null, 50%);
									margin-right: - $size / 2;
									margin-bottom: - $size / 2;
									@include border-radius($size / 2);
									@include size($size);
									background-color: black;
								}

								.seek-value {
									position: relative;
									z-index: $zindex-metric_seek_value;
									display: block;
									@include border-radius($def-radius);
									padding: 6px;
									font-size: 10px;
									font-weight: 200;
									color: white;
									background-color: black;
								}
							}
						}
					}

					.horizontal-scale {
						@include display-flex;
						@include justify-content(space-between);
						@include align-items(center);
						height: $scale-width;
						border-top: 2px solid $metrics_ruler-color;
						font-size: 12px;
						color: $metrics_ruler-color;
					}
				}

				&:not(.open) {

					.vertical-scale {
						opacity: 0;

						.value-grid-element {
							line-height: 0;
						}
					}

					.metric-with-horizontal-scale .samples-with-grid {
						height: 40px;

						svg.grid {
							opacity: 0;
						}
					}
				}
			}

			@mixin style_for_type($type, $color, $color_alt: null, $gradient-color: null) {
				&.#{ $type } {

					@if ($color_alt) {

						header {

							ul.legend {

								li:first-child:before {
									background-color: $color;
								}

								li:last-child:before {
									background-color: $color_alt;
								}
							}

							@include media-below-mid {
								@include flex-wrap(wrap);

								ul.legend {
									@include order(1);
									display: block;
									width: 100%;
									margin-top: 10px;

									li {
										margin-right: 0;
										margin-bottom: 5px;
									}
								}
							}
						}
					}

					figure .metric-with-horizontal-scale .samples-with-grid svg.samples {

						@if ($gradient-color) {

							defs linearGradient {

								stop {
									stop-color: $gradient-color;
								}
							}
						}
						@else {
							path.sample-curve {
								fill: none;
							}
						}

						path.sample-curve {

							@if ($color_alt) {
								&:first-of-type {
									stroke: $color;
								}

								&:last-of-type {
									stroke: $color_alt;
								}
							}
							@else {
								stroke: $color;
							}
						}
					}
				}
			}

			@include style_for_type("cpu", $def-green, null, $def-green);
			@include style_for_type("memory", $def-purple, null, $def-purple);
			@include style_for_type("network", $def-green, $def-blue);

			hr {
				margin: 0;
				border-top: none;
				border-color: $def-grey;
			}
		}
	}

	section#screenshots {

		.content {
			padding: 16px $header-horizontalpadding;
			background-color: white;

			ul.screenshots {
				@include display-flex;
				@include flex-wrap(wrap);
				$spacing: 20px;
				margin: - $spacing / 2;
				padding-left: 0;
				list-style: none;

				li.screenshot {

					.screenshot-content {
						position: relative;
						margin: $spacing / 2;

						a.open-image {
							display: block;
							background-color: $def-verylightgrey;
							@include no-default-focus-styling;
							@include transition(background-color 0.2s);

							img {
								display: block;
								@include margin-x(auto);
								@include max-size(420px);
							}

							&:hover, &:focus {
								background-color: $def-grey;
							}
						}

						.control-bar {
							@include position(absolute, null, 0, 0);
							@include display-flex;
							@include justify-content(space-between);
							width: 100%;
							@include box-sizing(border-box);
							padding: 15px;
							color: white;
							background-color: rgba(0, 0, 0, 0.7);

							strong.filename {
								@include ellipsis-oneliner;
								font-size: 12px;
								font-weight: 400;
							}

							a.download {
								$hover-padding: 10px;

								margin: - $hover-padding;
								padding: $hover-padding;
								@include no-default-focus-styling;

								svg {
									@include size(10px, 14px);
									fill: white;
									@include transition(fill 0.2s);
								}

								&:hover, &:focus {

									svg {
										fill: $def-green;
									}
								}
							}
						}
					}
				}

				@include media-below(700px) {
					@include justify-content(center);
				}
			}
		}
	}

	section#activity-map {

		header {
			@include display-flex;
			@include align-items(center);

			.title {

			}

			a.enlarge {
				@include display-flex;
				@include align-items(center);
				margin-left: auto;
				$color: $def-green;
				$color-shade: $def-green-shade;
				$transition_duration: 0.2s;
				color: $color;
				text-decoration: none;
				@include transition(color $transition_duration);

				span.svg-wrapper {
					margin-right: 6px;

					svg {
						display: block;
						@include size(16px, 13px);
						fill: $color;
						@include transition(fill $transition_duration);
					}
				}

				&:hover, &:focus {
					color: $color-shade;

					span.svg-wrapper svg {
						fill: $color-shade;
					}
				}
			}
		}

		.content {
			padding: 16px $header-horizontalpadding;
			text-align: center;
			background-color: white;

			img {
				@include max-size(100%, none);
			}
		}
	}

	section#logs {

		header {
			@include display-flex;
			@include align-items(center);

			.title {
				margin-right: 14px;
			}

			.log-type-filter {
				$leftpadding: 30px;
				$rightpadding: 20px;

				position: relative;
				width: 200px;

				button.toggle, .log-types button.log-type {
					width: 100%;
					@include padding-y(8px);
					text-align: left;
					font-size: 12px;
					font-weight: 200;
					text-transform: uppercase;
					cursor: pointer;

					@include no-default-focus-styling;
				}

				button.toggle {
					$logs_icon-width: 12px;
					$arrow-width: 8px;

					@include margin-y(0);
					border: none;
					@include border-radius($def-radius);
					padding-left: $leftpadding / 2 - $logs_icon-width / 2;
					padding-right: $rightpadding;
					background-color: $def-lightgrey;
					@include transition(background-color 0.2s);
					background-image: url("/assets/images/arrow-down.svg");
					background-size: $arrow-width auto;
					background-position: center right $rightpadding / 2 - $arrow-width / 2;
					background-repeat: no-repeat;

					&:hover, &:focus {
						background-color: $def-grey;
					}

					.svg-wrapper.logs svg {
						@include size($logs_icon-width, 8px);
						margin-right: $leftpadding / 2 - $logs_icon-width / 2;
						fill: $def-verydarkgrey;
					}
				}

				.log-types {
					@include position(absolute, 100%, null, null, 0);
					width: 100%;
					margin-top: 6px;
					@include border-radius($def-radius);
					overflow: hidden;

					button.log-type {
						$check-width: 10px;

						@include margin-y(0);
						border: none;
						padding-left: $leftpadding / 2 - $check-width / 2;
						padding-right: $rightpadding;
						background-color: $def-lightgrey;
						@include transition(background-color 0.2s);

						&:not(:last-child) {
							border-bottom: 1px solid $def-grey;
						}

						&:hover, &:focus {
							background-color: $def-grey;
						}

						.svg-wrapper.check {
							margin-right: $leftpadding / 2 - $check-width / 2;

							svg {
								@include size($check-width, 8px);
							}
						}

						&:not(.selected) .svg-wrapper.check {
							opacity: 0;
						}

						&.selected {
							font-weight: 400;

							.svg-wrapper.check {
								opacity: 1;
							}
						}
					}
				}
			}

			a.download {
				margin-left: auto;
				@include border-radius($def-radius);
				padding: 6px 16px;
				text-align: center;
				font-size: 12px;
				font-weight: 200;
				text-transform: uppercase;
				background-color: $def-green;
				color: white;
				text-decoration: none;
				@include transition(background-color 0.2s);
				@include no-default-focus-styling;

				&:hover, &:focus {
					background-color: $def-green-shade;
				}
			}

			@include media-below-mid {
				@include flex-direction(column);
				@include align-items(flex-start);

				span.title, .log-type-filter {
					margin-bottom: 8px;
				}

				span.title {
					margin-right: 0;
				}

				.log-type-filter {
					@include align-self(stretch);
					width: auto;
				}

				a.download {
					@include align-self(stretch);
					width: auto;
					margin-left: 0;
				}
			}
		}

		ol.log-lines {
			@include margin-y(0);
			padding: 10px 17px;
			list-style: none;
			@include SourceCodeProWithFallback;
			font-size: 14px;
			letter-spacing: 0.1em;
			font-weight: 200;
			color: white;
			background-color: #464646;

			li {
				@include padding-y(8px);
				cursor: pointer;

				.log-line {

					&:hover {
						background-color: rgba(white, 0.1);
					}

					&.processed {
						@include display-flex;
						@include align-items(center);

						.status-icon {
							@include flex-shrink(0);
							margin-right: 14px;

							.svg-wrapper {
								display: none;
							}
						}

						time, .tag {
							@include flex-shrink(0);
							margin-right: 10px;
						}

						time {
							width: 200px;
							@include ellipsis-oneliner;
						}

						.tag {
							width: 200px;
							font-weight: 500;
							@include ellipsis-oneliner;
						}

						.message {
							@include flex-grow(1);
							white-space: pre-wrap;
						}
					}

					@mixin style_for_type($type, $color) {
						&.#{ $type } .svg-wrapper.#{ $type } {
							display: inline;

							svg {
								@include size($state_icon-size);
								vertical-align: middle;

								path.plate {
									fill: $color;
								}
							}
						}
					}

					@include style_for_type("verbose", $def-blue);
					@include style_for_type("debug", $def-blue);
					@include style_for_type("info", $def-blue);
					@include style_for_type("warning", $def-yellow);
					@include style_for_type("error", $def-orange);
					@include style_for_type("assert", $def-red);
				}

				&.expanded .log-line {

					&.processed .message, &:not(.processed) {
						word-break: break-all;
					}
				}

				&:not(.expanded) .log-line {

					&.processed .message, &:not(.processed) {
						@include ellipsis-oneliner;
					}
				}
			}

			@include media-below-big {
				font-size: 12px;

				li {
					@include padding-y(4px);

					.log-line.processed {

						.status-icon .svg-wrapper > svg {
							@include size(18px !important);
						}

						time {
							width: 120px;
						}

						.tag {
							width: 160px;
						}
					}
				}
			}

			@include media-below-mid {

				li .log-line.processed {
					@include flex-direction(column);
					@include align-items(flex-start);

					.message {
						max-width: 100%;
					}
				}
			}
		}

		footer.log-pagination {
			$button-height: 12px;
			$light_color: #bbb;
			$transition-duration: 0.2s;

			@include display-flex;
			@include justify-content(flex-start);
			padding: 10px 16px;
			background-color: white;

			button.previous, button.page, button.next {
				height: $button-height;
				@include box-sizing(content-box);
				border: none;
				padding: 6px;
				background-color: transparent;
				@include no-default-focus-styling;

				&:not(:disabled) {
					cursor: pointer;
				}
			}

			button.previous, button.next {

				svg {
					@include size($button-height, 8px);
					fill: black;
					@include transition(fill $transition-duration);
				}

				&:not(:focus):not(:hover), &:disabled {

					svg {
						fill: $light_color;
					}
				}
			}

			button.previous {
				@include transform(rotate(90deg));
			}

			button.next {
				@include transform(rotate(-90deg));
			}

			.page-wrapper {
				@include display-flex;

				.dots svg {
					@include size(26px, 4px);
					fill: $light_color;
				}

				button.page {
					line-height: $button-height;
					font-size: 14px;
					font-weight: 200;
					color: black;
					@include transition(color $transition-duration);

					&:not(:focus):not(:hover):not(:disabled) {
						color: $light_color;
					}
				}
			}
		}
	}

	section#files {

		.content {
			background-color: white;

			ul.files {
				@include margin-y(0);
				padding-left: 0;
				list-style: none;

				li.file {
					border-top: 1px solid $def-lightgrey;

					a.download {
						@include display-flex;
						@include align-items(center);
						padding: 10px $header-horizontalpadding;
						font-size: 12px;
						font-weight: 200;
						color: black;
						text-decoration: none;
						@include transition(background-color 0.2s);

						.svg-wrapper {
							@include flex-shrink(0);
							margin-right: 16px;

							svg {
								display: block;
								@include size(15px, 18px);
								fill: $def-green;
							}
						}

						.name {
							@include flex-grow(1);
						}

						&:hover, &:focus {
							background-color: $def-verylightgrey;
						}
					}
				}
			}
		}

	}
}
